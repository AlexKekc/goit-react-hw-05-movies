{"version":3,"file":"static/js/840.02fc82a3.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: ${p => p.theme.space[5]}px;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border-bottom: ${p => p.theme.borders.bold};\n`;\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  text-decoration: none;\n  color: ${p => p.theme.colors.primaryText};\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus-visible {\n    background-color: ${p => p.theme.colors.orange};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  max-width: 240px;\n  height: 356px;\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const MovieDataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: ${p => p.theme.space[5]}px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const MovieSubtitle = styled.h4`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieData = styled.p`\n  padding-left: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const GenresList = styled.ul`\n  padding-left: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const GenresItem = styled.li`\n  list-style: none;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  padding-left: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  text-decoration: underline;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.primaryText};\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.orange};\n  }\n`;\n","import React, { useState, useEffect, Suspense } from 'react';\nimport { ImArrowLeft } from 'react-icons/im';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport {\n  Container,\n  MovieWrapper,\n  BackButton,\n  MoviePoster,\n  MovieDataWrapper,\n  MovieTitle,\n  MovieSubtitle,\n  MovieData,\n  GenresList,\n  GenresItem,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n  AdditionalInfoLink,\n} from './MovieDetails.styled';\nimport * as API from 'services/movies-api';\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchData() {\n      try {\n        const response = await API.getMovieDetails(Number(movieId), controller);\n        setMovie(response);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, popularity, overview, genres } = movie;\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <Container>\n      <BackButton to={backLinkHref}>\n        <ImArrowLeft />\n        Go back\n      </BackButton>\n      {error && error.message !== 'canceled' && (\n        <p>Whoops, something went wrong: {error.message}</p>\n      )}\n      <MovieWrapper>\n        <MoviePoster\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg'\n          }\n          alt={title}\n        />\n        <MovieDataWrapper>\n          <MovieTitle>{title}</MovieTitle>\n          <MovieSubtitle>Popularity</MovieSubtitle>\n          <MovieData>{popularity}</MovieData>\n          <MovieSubtitle>Overview</MovieSubtitle>\n          <MovieData>{overview}</MovieData>\n          <MovieSubtitle>Genres</MovieSubtitle>\n          <GenresList>\n            {genres.map(({ id, name }) => (\n              <GenresItem key={id}>{name}</GenresItem>\n            ))}\n          </GenresList>\n        </MovieDataWrapper>\n      </MovieWrapper>\n      <MovieSubtitle>Additional information</MovieSubtitle>\n      <AdditionalInfoList>\n        {navItems.map(({ href, text }) => (\n          <AdditionalInfoItem key={href}>\n            <AdditionalInfoLink to={href} state={{ from: backLinkHref }}>\n              {text}\n            </AdditionalInfoLink>\n          </AdditionalInfoItem>\n        ))}\n      </AdditionalInfoList>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","p","theme","space","MovieWrapper","borders","bold","BackButton","Link","radii","normal","colors","primaryText","orange","white","MoviePoster","MovieDataWrapper","MovieTitle","MovieSubtitle","MovieData","GenresList","GenresItem","AdditionalInfoList","AdditionalInfoItem","AdditionalInfoLink","navItems","href","text","movieId","useParams","useState","movie","setMovie","error","setError","location","useLocation","useEffect","controller","AbortController","API","Number","response","fetchData","abort","poster_path","title","popularity","overview","genres","backLinkHref","state","from","to","message","src","alt","map","id","name","Suspense","fallback"],"sourceRoot":""}